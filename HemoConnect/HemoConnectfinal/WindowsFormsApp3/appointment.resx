<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABLhJREFUWEftl/tTVGUYx/uPkorLwrKyy7JcVW4CGdcJYoFk5SIShGARieAFMLSL
        KE1UVIYMGgrjRFzEoEAIBBm0UbMwUUEImkH8dp6z7HEXnt09uzAjP/TDZwZ23/f5fva9nvNSYLABm5n/
        BdeLU4IBEXnwyzgKv8xj8hDaUh+ulj0cFtTFlUBx5Q+4X3vkEB49d+EfW8LWtIXDguqyr1gBOVBfrqYt
        HBb0S6+Ex+BDVsAW1McvrZKtaQun1iAF+Rxpwo7rM/AeeswKmUNt/fQVbC17OCVoIufWHAw356AbMUrS
        KMW3DEDVf99CkOsrl3ULEumTT0SRmsoGLCt3oCt1/+YSJJRDj1B92CjYqd+EgluHH4tTHHd+EN6bbYpN
        guZS5nB95bLhgqW1zZiISkdtef2LFdyeXGYhSGuQZGa1MeI6fOodCu2Vu+Jn/vEH2BpycE5wWxbSOick
        uYyVXUzQBiHBsZjdUAwYD3SvlmEEhmTxtezglGDsqUuiWPHIffTUN6O74AgyGruNMr8+YM9CdcV3bC17
        OCwYlnkU2ZOzouCNqnosJ+0RR+xfn0iEXb5hIWXBwDR0qeVsTVs4JBgUlouMvjvS1C7klWLZJ1wUJPLO
        tPFyKyjaJxAQmsvWtoZDgonfdEty2QId+YclOdocQZ2/s2LmqE60srWtIVswovAT5Nx8gqp7C3jv9jyi
        x2fFdUa3xxfFtYi5OMIKrUE4zLVZx9kMDlmCwVEF2D00hdNTi3gG4Nr8EhRcuMDOtjHxTm7PLEVvSgEu
        ZJfj/RPN0PY+f8j16LqNgMh32KzVyBJ888IgPrjzDxaWn4mCZ376TTrj6HoLbx/HwZqzGIzPlaZ8NRNR
        GVD+8nxne3/Zw2atxq5g9KFGcc1NLj4V1ICJvhEpdF4ThUV1pIWILRr210qChLrwMzbTHJuC2xIOwDA2
        LQneejiHJY18odUsqUKRLmw0knO9eg9bzvZCt6uIzTZhXVC4LfQd49KuzR+fxp8RejbYEaZCEsXl4dI2
        ipeb++Fad8nmLWNVcFd1kyRH/Fh8nA10htasg3C5OCwKEqqCj1kHghUMjtgHw+gDSa665SobtB6yqhol
        wS3CtPuH5qzxIFjBsMJPJTnDyN+YCYxjQ9bDtO51eH7bLUmqM/g3PlbQv+gUgkdnxJehBOHi5wI2gvC6
        HyRBn9yaNR4EK0iviKajQDE4jf6kfWzAeuhK2AuX5j5J0PetD9d4EPwmEXaV4vKkhSQ9QtEjlSy+7kJy
        XSsST55DQu33a4gQRs7lnFGMeKWhw+pO5gUFtJlVcBee7UySjuDSfl0Kt0vTz9DorT+GWRUktJnHLEZS
        Dq59f/EiDDRy6rRDbLYJm4IiwtD7pVVA824dNCWf20VddBqq/JO22fsRfFPKEBCyh880w77gC0a2YEDQ
        bmh1qdD4JsNHnQTvrXFQer8BL6VwnhFe0VCsQH/TZ/QdtaG21If6Ug2qxWVw2BT0D3wbSlUs3D0i8Zrr
        dry6QVAtqkm1KYPLNmF7k+j0YiEuZCOg2pTBZZuQNcX0KzXaFKh8EsRf7amMgYfnTrh5hMPNPRyubqEi
        pmDT//QdtaG21If6Ug2qZW/kjBjwH0KoQvgLTIG0AAAAAElFTkSuQmCC
</value>
  </data>
</root>